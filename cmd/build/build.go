package build

import (
	"os"
	"path/filepath"

	"github.com/anvlet/anvlet/cmd/config"
	"github.com/anvlet/anvlet/cmd/schema"
	"github.com/anvlet/anvlet/internal/generator_grpc"
	"gopkg.in/yaml.v3"
)

func Build(schemaFile string, schema *schema.Schema) {
	d, err := yaml.Marshal(schema)
	if err != nil {
		panic("fail")
	}

	path := "./anvlet/" + schemaFile

	if err := os.MkdirAll(filepath.Dir(path), 0770); err != nil {
		panic(err.Error())
	}

	f, err := os.Create(path)
	if err != nil {
		panic(err.Error())
	}
	defer f.Close()

	header := []string{
		"Code generated by Anvlet CLI. DO NOT EDIT.",
		"versions:",
		"- File: 1.0.0",
		"- Anvlet: " + config.CLI_VERSION,
		"source: " + schemaFile,
	}

	for _, v := range header {
		_, err = f.Write([]byte("# " + v + "\n"))
		if err != nil {
			panic(err.Error())
		}
	}

	_, err = f.Write(d)
	if err != nil {
		panic(err.Error())
	}

	// Temporary, hardcoded to generate what we need for now, MVP
	err = generator_grpc.Generate(schema)
	if err != nil {
		panic(err.Error())
	}
}
